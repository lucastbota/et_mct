plugins {
    id("com.github.johnrengelman.shadow") version "6.1.0"
    id("io.micronaut.application") version "1.2.0"
    id "com.diffplug.eclipse.apt" version "3.22.0"
}

version = "0.1"
group = "app.httpclient"

repositories {
    mavenCentral()
    jcenter()
}
mainClassName = "app.httpclient.Application"

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("app.httpclient.*")
    }
}

dependencies {
    compileOnly("org.graalvm.nativeimage:svm")
    annotationProcessor(platform("io.micronaut:micronaut-bom:$micronautVersion"))
    annotationProcessor("io.micronaut:micronaut-inject-java")
    annotationProcessor("io.micronaut:micronaut-validation")
    //tag::micronaut-graal[]
    annotationProcessor("io.micronaut:micronaut-graal")
    //end::micronaut-graal[]
    compileOnly(platform("io.micronaut:micronaut-bom:$micronautVersion"))
    //tag::svm[]
    compileOnly("org.graalvm.nativeimage:svm")
    //end::svm[]
    implementation(platform("io.micronaut:micronaut-bom:$micronautVersion"))
    implementation("io.micronaut:micronaut-inject")
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut:micronaut-http-server-netty")
    implementation("io.micronaut:micronaut-http-client")
    runtimeOnly("ch.qos.logback:logback-classic")
    testAnnotationProcessor(platform("io.micronaut:micronaut-bom:$micronautVersion"))
    testAnnotationProcessor("io.micronaut:micronaut-inject-java")
    testImplementation(platform("io.micronaut:micronaut-bom:$micronautVersion"))
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("io.micronaut.test:micronaut-test-junit5")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
}


application {
    mainClass.set("app.httpclient.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

tasks {


}

