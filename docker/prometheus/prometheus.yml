# my global config
global:
  scrape_interval:     120s # By default, scrape targets every 15 seconds.
  evaluation_interval: 120s # By default, scrape targets every 15 seconds.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
      monitor: 'my-monitoring'

# Load and evaluate rules in this file every 'evaluation_interval' seconds.
rule_files:
  # - "alert.rules"
  # - "first.rules"
  # - "second.rules"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus-cadvisor'
    static_configs:
         - targets: ['cadvisor:7082']
  - job_name: 'prometheus-node-exporter'
    static_configs:
         - targets: ['node-exporter:9100']
  - job_name: 'prometheus-nginx-exporter'
    static_configs:
         - targets: ['cadvisor:9133']

  - job_name: 'prometheus-cliente'
    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 120s
    #metrics_path: /metrics
    # scheme defaults to 'http'.
    static_configs:
         - targets: ['localhost:8082']
         
         
  - job_name: 'prometheus-produto'
    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 120s
    metrics_path: /prometheus
    # scheme defaults to 'http'.
    static_configs:
         - targets: ['localhost:8084']
         
  - job_name: 'prometheus-pedidos'
    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 120s
    metrics_path: /prometheus
    # scheme defaults to 'http'.
    static_configs:
         - targets: ['localhost:8080']
