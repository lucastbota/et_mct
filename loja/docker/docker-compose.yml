version: "3.9"  # optional since v1.27.0
services:
  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123r
      MONGO_INITDB_DATABASE: entregadb

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 7081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: 123r
      
  mariadb-produto:
    image: mariadb:10.5.8
    container_name: produto_db
    restart: always
    ports:
    - 3306:3306
    environment:
      MYSQL_USER: usr_product
      MYSQL_PASSWORD: 123r
      MYSQL_ROOT_PASSWORD: 123r
      MYSQL_DATABASE: productdb

  mariadb-cliente:
    image: mariadb:10.5.8
    restart: always
    ports:
    - 3307:3306
    environment:
      MYSQL_USER: usr_client
      MYSQL_PASSWORD: 123r
      MYSQL_ROOT_PASSWORD: 123r
      MYSQL_DATABASE: clientedb

  mariadb-pedido:
    image: mariadb:10.5.8
    container_name: pedido_db
    restart: always
    ports:
    - 3308:3306
    environment:
      MYSQL_USER: usr_pedido
      MYSQL_PASSWORD: 123r
      MYSQL_ROOT_PASSWORD: 123r
      MYSQL_DATABASE: pedidodb

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbit_produto
    hostname: localhost
    ports:
      - "5672:5672"
      - "15672:15672"
    network_mode: "bridge"
    volumes:
      - ${PWD}/rabbit-conf/definitions-2-25.json:/opt/definitions.json:ro
      - ${PWD}/rabbit-conf/rabbitmq.config:/etc/rabbitmq/rabbitmq.config
    
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks: 
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      
  kafka:
    image: confluentinc/cp-kafka:latest
    networks: 
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks: 
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
      
  jaeger:
    image: jaegertracing/all-in-one:1.22
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp 
      - 5778:5778
      - 16686:16686 
      - 14268:14268
      - 14250:14250
      - 9411:9411
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411

  consul:
    image: consul
    ports:
      - 8500:8500

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: on-failure
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 7090:9090

  grafana:
    image: grafana/grafana:latest
    container_name: monitoring_grafana
    restart: on-failure
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    ports:
      - 3000:3000

  clientes:
    build: ../clientes
    restart: on-failure
    ports:
      - 8082:8082
    depends_on: 
      - mariadb-cliente
    environment:
      MICRONAUT_SERVER_HOST: clientes
      MICRONAUT_SERVER_PORT: 8082
      DB_HOST: mariadb-cliente
      DB_PORT: 3306
      CONSUL_HOST: consul
      CONSUL_PORT: 8500

networks: 
  broker-kafka:
    driver: bridge 